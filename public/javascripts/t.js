// Generated by CoffeeScript 1.3.3
(function() {
  var isArray, isFunction, isObject;

  isArray = function(o) {
    return o instanceof Array;
  };

  isFunction = function(o) {
    return typeof o === "function";
  };

  isObject = function(o) {
    return typeof o === "object" && (!(o instanceof Array));
  };

  this.render = function(template, data) {
    var first, key, name, part, result, s, second, styles, _i, _len;
    if (isFunction(template)) {
      return render(template(data));
    }
    if (!isArray(template)) {
      return template;
    }
    if (template.length === 0) {
      return;
    }
    first = template.shift();
    if (template.length === 0) {
      return "<" + first + "/>";
    }
    result = "<" + first;
    second = template.shift();
    if (isObject(second)) {
      for (key in second) {
        if (key === "style") {
          styles = second.style;
          if (isObject(styles)) {
            s = "";
            for (name in styles) {
              if (styles.hasOwnProperty(name)) {
                s += name + ":" + styles[name] + ";";
              }
            }
            result += " style=\"" + s + "\"";
          } else {
            result += " style=\"" + styles + "\"";
          }
        } else {
          if (second.hasOwnProperty(key)) {
            result += " " + key + "=\"" + second[key] + "\"";
          }
        }
      }
      if (template.length === 0) {
        result += "/>";
        return result;
      } else {
        result += ">";
      }
    } else {
      result += ">";
      result += render(second, data);
      if (template.length === 0) {
        result += "</" + first + ">";
        return result;
      }
    }
    if (template.length > 0) {
      for (_i = 0, _len = template.length; _i < _len; _i++) {
        part = template[_i];
        result += render(part, data);
      }
      result += "</" + first + ">";
    }
    return result;
  };

}).call(this);
